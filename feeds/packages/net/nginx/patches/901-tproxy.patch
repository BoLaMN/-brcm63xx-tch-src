diff -Naur a/auto/options b/auto/options
--- a/auto/options	2017-07-11 15:24:06.000000000 +0200
+++ b/auto/options	2017-11-20 04:02:13.937281986 +0100
@@ -44,6 +44,7 @@
 USE_THREADS=NO
 
 NGX_FILE_AIO=NO
+NGX_TPROXY=NO
 
 HTTP=YES
 
@@ -203,6 +204,7 @@
         --with-threads)                  USE_THREADS=YES            ;;
 
         --with-file-aio)                 NGX_FILE_AIO=YES           ;;
+        --with-tproxy)                   NGX_TPROXY=YES             ;;
 
         --with-ipv6)
             NGX_POST_CONF_MSG="$NGX_POST_CONF_MSG
@@ -427,6 +429,7 @@
   --with-threads                     enable thread pool support
 
   --with-file-aio                    enable file AIO support
+  --with-tproxy                      enable TPROXY support
 
   --with-http_ssl_module             enable ngx_http_ssl_module
   --with-http_v2_module              enable ngx_http_v2_module
diff -Naur a/auto/unix b/auto/unix
--- a/auto/unix	2017-11-20 00:55:04.000000000 +0100
+++ b/auto/unix	2017-11-20 04:10:05.029291702 +0100
@@ -650,6 +650,17 @@
                   (void) sin6"
 . auto/feature
 
+if [ $NGX_TPROXY = YES ]; then
+    ngx_feature="Linux TPROXY support"
+    ngx_feature_name="NGX_HAVE_TPROXY"
+    ngx_feature_run=no
+    ngx_feature_incs=
+    ngx_feature_path=
+    ngx_feature_libs=
+    ngx_feature_test=
+
+    . auto/feature
+fi
 
 ngx_feature="setproctitle()"
 ngx_feature_name="NGX_HAVE_SETPROCTITLE"
diff -Naur a/src/core/ngx_connection.c b/src/core/ngx_connection.c
--- a/src/core/ngx_connection.c	2017-07-11 15:24:07.000000000 +0200
+++ b/src/core/ngx_connection.c	2017-11-20 12:43:53.069927571 +0100
@@ -9,6 +9,8 @@
 #include <ngx_core.h>
 #include <ngx_event.h>
 
+#define IP_TRANSPARENT 19
+
 
 ngx_os_io_t  ngx_io;
 
@@ -87,6 +89,10 @@
     ls->fastopen = -1;
 #endif
 
+#if (NGX_HAVE_TPROXY)
+    ls->tproxy = 0;
+#endif
+
     return ls;
 }
 
@@ -386,6 +392,9 @@
     ngx_log_t        *log;
     ngx_socket_t      s;
     ngx_listening_t  *ls;
+#if (NGX_HAVE_TPROXY)
+    int               tproxy;
+#endif
 
     reuseaddr = 1;
 #if (NGX_SUPPRESS_WARN)
@@ -532,6 +541,19 @@
                 }
             }
 
+#if (NGX_HAVE_TPROXY)
+            /* TPROXY support requires enabled (SOL_IP, IP_TRANSPARENT)       */
+            /* socket option to be able to send datagrams _from_ non-local IP */
+            tproxy = ls[i].tproxy;
+            if (setsockopt(s, SOL_IP, IP_TRANSPARENT, &tproxy,
+                     sizeof(tproxy)) == -1) {
+                ngx_log_error(NGX_LOG_EMERG, log, ngx_socket_errno,
+                     "setsockopt(SOL_IP, IP_TRANSPARENT) %V failed",
+                     &ls[i].addr_text);
+                return NGX_ERROR;
+            }
+#endif
+
             ngx_log_debug2(NGX_LOG_DEBUG_CORE, log, 0,
                            "bind() %V #%d ", &ls[i].addr_text, s);
 
diff -Naur a/src/core/ngx_connection.h b/src/core/ngx_connection.h
--- a/src/core/ngx_connection.h	2017-07-11 15:24:07.000000000 +0200
+++ b/src/core/ngx_connection.h	2017-11-20 04:33:58.237321264 +0100
@@ -76,6 +76,9 @@
     unsigned            deferred_accept:1;
     unsigned            delete_deferred:1;
     unsigned            add_deferred:1;
+#if (NGX_HAVE_TPROXY)
+    unsigned            tproxy:1;
+#endif
 #if (NGX_HAVE_DEFERRED_ACCEPT && defined SO_ACCEPTFILTER)
     char               *accept_filter;
 #endif
diff -Naur a/src/http/ngx_http.c b/src/http/ngx_http.c
--- a/src/http/ngx_http.c	2017-07-11 15:24:08.000000000 +0200
+++ b/src/http/ngx_http.c	2017-11-20 05:33:23.637394805 +0100
@@ -1775,6 +1775,10 @@
     ls->reuseport = addr->opt.reuseport;
 #endif
 
+#if (NGX_HAVE_TPROXY)
+    ls->tproxy = addr->opt.tproxy;
+#endif
+
     return ls;
 }
 
diff -Naur a/src/http/ngx_http_core_module.c b/src/http/ngx_http_core_module.c
--- a/src/http/ngx_http_core_module.c	2017-07-11 15:24:08.000000000 +0200
+++ b/src/http/ngx_http_core_module.c	2017-11-20 09:14:39.893668645 +0100
@@ -3971,6 +3971,9 @@
 #if (NGX_HAVE_TCP_FASTOPEN)
     lsopt.fastopen = -1;
 #endif
+#if (NGX_HAVE_TPROXY)
+    lsopt.tproxy = 0;
+#endif
     lsopt.wildcard = u.wildcard;
 #if (NGX_HAVE_INET6)
     lsopt.ipv6only = 1;
@@ -3994,6 +3997,17 @@
             continue;
         }
 
+        if (ngx_strcmp(value[n].data, "tproxy") == 0) {
+#if (NGX_HAVE_TPROXY)
+            lsopt.tproxy = 1;	
+#else
+            ngx_conf_log_error(NGX_LOG_WARN, cf, 0,
+                       "TPROXY support is not enabled, ignoring option \"tproxy\" in %V",
+                       &value[n]);
+#endif
+            continue;
+        }
+
 #if (NGX_HAVE_SETFIB)
         if (ngx_strncmp(value[n].data, "setfib=", 7) == 0) {
             lsopt.setfib = ngx_atoi(value[n].data + 7, value[n].len - 7);
diff -Naur a/src/http/ngx_http_core_module.h b/src/http/ngx_http_core_module.h
--- a/src/http/ngx_http_core_module.h	2017-07-11 15:24:08.000000000 +0200
+++ b/src/http/ngx_http_core_module.h	2017-11-20 09:15:14.837669366 +0100
@@ -81,6 +81,9 @@
     unsigned                   reuseport:1;
     unsigned                   so_keepalive:2;
     unsigned                   proxy_protocol:1;
+#if (NGX_HAVE_TPROXY)
+    unsigned                   tproxy:1;
+#endif
 
     int                        backlog;
     int                        rcvbuf;
